{"version":3,"sources":["images/icon-rock.svg","images/icon-paper.svg","images/icon-scissors.svg","images/icon-lizard.svg","images/icon-spock.svg","components/SelectionButton.js","components/SelectionButtonContainer.js","components/Scoresheet.js","images/image-rules-bonus.svg","images/icon-close.svg","components/Rules.js","components/Versus.js","App.js","reportWebVitals.js","index.js"],"names":["SelectionButton","props","svg","innercircle","type","rock","paper","scissors","lizard","spock","className","src","alt","onClick","onclick","data-type","SelectionButtonContainer","selectChoice","Scoresheet","score","Rules","matchups","id","iconclose","choices","Versus","componentDidMount","roulette","then","wait","gameLogic","duration","Promise","resolve","setTimeout","i","setInterval","setState","displayed_opponent_choice","length","rollDuration","Math","ceil","random","clearInterval","state","opponent_choice","outcome","outcome_message","player_choice","updateScore","game_over","choice","floor","results","this","playAgain","matchMedia","matches","React","Component","App","event","selection","currentTarget","dataset","gameState","updateGameState","game_state_component","Error","toggleRules","target","document","getElementById","querySelector","displayRules","undefined","rules","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d19377aa.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/icon-rock.476e90a9.svg\";","export default __webpack_public_path__ + \"static/media/icon-paper.8b57a6b1.svg\";","export default __webpack_public_path__ + \"static/media/icon-scissors.3b1a5d7e.svg\";","export default __webpack_public_path__ + \"static/media/icon-lizard.0f83914c.svg\";","export default __webpack_public_path__ + \"static/media/icon-spock.f4d7eee8.svg\";","import './SelectionButton.css'\r\nimport rock from './../images/icon-rock.svg'\r\nimport paper from './../images/icon-paper.svg'\r\nimport scissors from './../images/icon-scissors.svg'\r\nimport lizard from './../images/icon-lizard.svg'\r\nimport spock from './../images/icon-spock.svg'\r\n\r\nfunction SelectionButton(props) {\r\n    const type = props.type;\r\n    let svg;\r\n    switch (type) {\r\n        case 'rock':\r\n            svg = rock;\r\n            break;\r\n        case 'paper':\r\n            svg = paper;\r\n            break;\r\n        case 'scissors':\r\n            svg = scissors;\r\n            break;\r\n        case 'lizard':\r\n            svg = lizard;\r\n            break;\r\n        case 'spock':\r\n            svg = spock;\r\n            break;\r\n        default: ;\r\n    }\r\n\r\n    let innercircle;\r\n    if (type) {\r\n        innercircle =\r\n            <div className=\"circle inner\">\r\n                <img src={svg} alt={type} />\r\n            </div>\r\n            ;\r\n    }\r\n\r\n    return (\r\n        <div className=\"SelectionButton\" onClick={props.onclick} data-type={type}>\r\n            <div className={\"circle outer \" + type}>\r\n                {innercircle}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SelectionButton;","import './SelectionButtonContainer.css'\r\nimport SelectionButton from './SelectionButton.js'\r\n\r\nfunction SelectionButtonContainer(props) {\r\n    return (\r\n        <div className=\"SelectionButton-container\">\r\n            <div className=\"container\">\r\n                <div className=\"row-container\">\r\n                    <div className=\"row\">\r\n                        <SelectionButton type=\"scissors\" onclick={props.selectChoice} />\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <SelectionButton type=\"spock\" onclick={props.selectChoice} />\r\n                        <SelectionButton type=\"paper\" onclick={props.selectChoice} />\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <SelectionButton type=\"lizard\" onclick={props.selectChoice} />\r\n                        <SelectionButton type=\"rock\" onclick={props.selectChoice} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SelectionButtonContainer;","import './Scoresheet.css'\r\n\r\nfunction Scoresheet(props) {\r\n    return (\r\n        <div className=\"Scoresheet\">\r\n            <div className=\"choices\">\r\n                <p>Rock</p>\r\n                <p>Paper</p>\r\n                <p>Scissors</p>\r\n                <p>Lizard</p>\r\n                <p>Spock</p>\r\n            </div>\r\n            <div className=\"score\">\r\n                <p className=\"text\">Score</p>\r\n                <p className=\"number\">{props.score}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scoresheet;","export default __webpack_public_path__ + \"static/media/image-rules-bonus.57e1e5af.svg\";","export default __webpack_public_path__ + \"static/media/icon-close.bde602ec.svg\";","import './Rules.css'\r\nimport matchups from './../images/image-rules-bonus.svg'\r\nimport iconclose from './../images/icon-close.svg'\r\n\r\nfunction Rules(props) {\r\n\r\n    return (\r\n        <div className=\"unfocused-area\" onClick={props.onclick}>\r\n            <div className=\"Rules-container\">\r\n                <div className=\"centered Rules-container-items\">\r\n                    <p>Rules</p>\r\n                    <img src={matchups} alt=\"rules\" id=\"matchups\" />\r\n                    <img src={iconclose} alt=\"close\" id=\"closebutton\" onClick={props.onclick} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Rules;","import './Versus.css'\r\nimport SelectionButton from './SelectionButton.js'\r\nimport React from 'react'\r\n\r\nconst choices = ['rock', 'paper', 'scissors', 'lizard', 'spock'];\r\n\r\nclass Versus extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            player_choice: this.props.choice,\r\n            opponent_choice: choices[Math.floor(Math.random() * choices.length)]\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.roulette()\r\n            .then(() => this.wait(750))\r\n            .then(() => {\r\n                this.gameLogic()\r\n                // this.displayOutcome()\r\n            })\r\n    }\r\n\r\n    wait = (duration) => {\r\n        return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n                resolve()\r\n            }, duration)\r\n        })\r\n    }\r\n\r\n    // fake a roulette over each choice\r\n    roulette = () => {\r\n        return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n                let i = 0;\r\n                const id = setInterval(() => {\r\n                    this.setState({ displayed_opponent_choice: choices[i] });\r\n                    i++;\r\n                    i %= choices.length;\r\n                }, 125);\r\n                // at least 15 rolls, at most 30\r\n                const rollDuration = Math.ceil(Math.random() * 15) * 125 + (125 * 15);\r\n                // const rollDuration = Math.floor(Math.random() * 100) + 0;\r\n                setTimeout(() => {\r\n                    clearInterval(id);\r\n                    this.setState({ displayed_opponent_choice: this.state.opponent_choice });\r\n                    resolve();\r\n                }, rollDuration);\r\n            }, 750)\r\n        });\r\n    }\r\n\r\n    gameLogic = () => {\r\n        let outcome;\r\n        const player_choice = this.state.player_choice;\r\n        const opponent_choice = this.state.opponent_choice;\r\n        if (player_choice === opponent_choice)\r\n            outcome = 0;\r\n        else {\r\n            switch (player_choice) {\r\n                case 'rock':\r\n                    if (opponent_choice === 'scissors' || opponent_choice === 'lizard')\r\n                        outcome = 1;\r\n                    else\r\n                        outcome = -1;\r\n                    break;\r\n                case 'paper':\r\n                    if (opponent_choice === 'rock' || opponent_choice === 'spock')\r\n                        outcome = 1;\r\n                    else\r\n                        outcome = -1;\r\n                    break;\r\n                case 'scissors':\r\n                    if (opponent_choice === 'paper' || opponent_choice === 'lizard')\r\n                        outcome = 1;\r\n                    else\r\n                        outcome = -1;\r\n                    break;\r\n                case 'lizard':\r\n                    if (opponent_choice === 'spock' || opponent_choice === 'paper')\r\n                        outcome = 1;\r\n                    else\r\n                        outcome = -1;\r\n                    break;\r\n                case 'spock':\r\n                    if (opponent_choice === 'scissors' || opponent_choice === 'rock')\r\n                        outcome = 1;\r\n                    else\r\n                        outcome = -1;\r\n                    break;\r\n                default: ;\r\n            }\r\n        }\r\n        let outcome_message;\r\n        if (outcome === 1)\r\n            outcome_message = \"You Win\";\r\n        else if (outcome === 0)\r\n            outcome_message = \"You Tied\"\r\n        else\r\n            outcome_message = \"You Lose\";\r\n\r\n        this.props.updateScore(outcome);\r\n        this.setState({ outcome_message: outcome_message, game_over: true })\r\n    }\r\n\r\n    render() {\r\n        let results;\r\n        if (this.state.game_over) {\r\n            results =\r\n                <div className=\"results\">\r\n                    <p>{this.state.outcome_message}</p>\r\n                    <div className=\"play-again\" onClick={() => { this.props.playAgain() }}>Play Again</div>\r\n                </div>\r\n        }\r\n\r\n        //portrait view\r\n        if (matchMedia(\"(orientation:portrait)\").matches) {\r\n            return (\r\n                <div className=\"Versus-container\" >\r\n                    <div className=\"choices-container\">\r\n                        <div className=\"choice\">\r\n                            <SelectionButton type={this.state.player_choice} />\r\n                            <p>You Picked</p>\r\n                        </div>\r\n                        <div className=\"choice\">\r\n                            <SelectionButton type={this.state.displayed_opponent_choice} />\r\n                            <p>The House Picked</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"result-container\">\r\n                        {results}\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        //landscape view\r\n        else {\r\n            return (\r\n                <div className=\"Versus-container\" >\r\n                    <div className=\"choices-container\">\r\n                        <div className=\"choice\">\r\n                            <p>You Picked</p>\r\n                            <SelectionButton type={this.state.player_choice} />\r\n                        </div>\r\n                        <div className=\"result-container\">\r\n                            {results}\r\n                        </div>\r\n                        <div className=\"choice\">\r\n                            <p>The House Picked</p>\r\n                            <SelectionButton type={this.state.displayed_opponent_choice} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default Versus;","import React from 'react';\nimport './App.css';\nimport SelectionButtonContainer from './components/SelectionButtonContainer.js';\nimport Scoresheet from './components/Scoresheet.js';\nimport Rules from './components/Rules';\nimport Versus from './components/Versus.js'\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.game_state_component = undefined;\n    this.state = {\n      selection: undefined,\n      score: 0,\n      displayRules: false,\n      gameState: \"selection\"\n    };\n  }\n\n  // get the value of the button the user clicked on\n  selectChoice = (event) => {\n    //the element with the event handler\n    const target = event.currentTarget;\n    const selection = target.dataset.type;\n    this.setState({ selection: selection, gameState: \"versus\" });\n  }\n\n  updateScore = (outcome) => {\n    this.setState({ score: this.state.score + outcome })\n  }\n\n  playAgain = () => {\n    this.setState({ gameState: \"selection\" })\n  }\n\n  // change the game state component to reflect the current game state\n  updateGameState = () => {\n    switch (this.state.gameState) {\n      case \"selection\":\n        this.game_state_component =\n          <SelectionButtonContainer selectChoice={this.selectChoice} />;\n        break;\n      case \"versus\":\n        this.game_state_component = <Versus choice={this.state.selection} updateScore={this.updateScore} playAgain={this.playAgain} />;\n        break;\n      default:\n        throw Error(\"Something bad happened!\");\n    }\n  }\n\n  // display or hide the game rules\n  toggleRules = (event) => {\n    //the element with the event handler\n    const target = event.target;\n    if (target === document.getElementById('closebutton') || target === document.querySelector('.Rules-container') || target === document.querySelector('.rulesButton')) {\n      this.setState({\n        displayRules: !this.state.displayRules\n      });\n    }\n  }\n\n  // Called every time an update occurs (on state change)\n  // Components will be rerendered, and thus all code inside them reran\n  render() {\n    let rules;\n    if (this.state.displayRules)\n      rules = <Rules onclick={this.toggleRules} />\n    this.updateGameState();\n\n    return (\n      <div className=\"App\">\n        {rules}\n        <div className=\"game-container\">\n          <div className=\"Scoresheet-container\">\n            <Scoresheet score={this.state.score} />\n          </div>\n          {this.game_state_component}\n          <div className=\"rulesButton\" onClick={this.toggleRules}>\n            Rules\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}